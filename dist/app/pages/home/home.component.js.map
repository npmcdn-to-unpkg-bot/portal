{"version":3,"file":"home.component.js","sourceRoot":"","sources":["file:///d:/Study code/Code/learnangular/learn/tmp/broccoli_type_script_compiler-input_base_path-nIFYQlh8.tmp/0/src/app/pages/home/home.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiC,eAAe,CAAC,CAAA;AAEjD,2BAAyB,2BACzB,CAAC,CADmD;AAWpD;IAWE,uBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAV1C,cAAS,GAAqB;YAC5B,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC;YAClB,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC;YAClC,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC;YAC5B,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;YACnB,CAAC,YAAY,EAAE,YAAY,EAAE,KAAK,CAAC;SACpC,CAAA;IAI6C,CAAC;IAE/C,gCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,UAAC,KAAK;YACvB,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,KAAI,CAAC,iCAAiC,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yDAAiC,GAAjC,UAAkC,kBAA6B;QAC7D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAA5D,CAA4D,CAAC,CAAC,CAAC;QAC9I,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,kBAAkB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,CAAC;IACD,wCAAgB,GAAhB,UAAiB,KAAwB;QACvC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACd,MAAM,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IArCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,qBAAqB;YAClC,SAAS,EAAE,CAAC,oBAAoB,CAAC;YACjC,SAAS,EAAE,CAAC,uBAAU,CAAC;SACxB,CAAC;;qBAAA;IAgCF,oBAAC;AAAD,CAAC,AA/BD,IA+BC;AA/BY,qBAAa,gBA+BzB,CAAA","sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { Observable }     from 'rxjs/Observable';\nimport {GitService} from '../../services/gitService'\nimport {GitUser}  from '../../shared/gitUser'\nimport {Repository, Owner}  from '../../shared/gitRepo'\ntype ILanguage = [string, string, boolean];\n@Component({\n  moduleId: module.id,\n  selector: 'app-home',\n  templateUrl: 'home.component.html',\n  styleUrls: ['home.component.css'],\n  providers: [GitService]\n})\nexport class HomeComponent implements OnInit {\n  languages: Array<ILanguage> = [\n    [\"All\", \"\", false],\n    [\"Typescript\", \"typescript\", true],\n    [\"Angular 2\", \"html\", false],\n    [\"C#\", \"c#\", false],\n    [\"Javascript\", \"javascript\", false]\n  ]\n  sub: Observable<Array<Repository>>;\n  gitRepositories: Array<Repository>;\n  _gitRepositories: Array<Repository>;\n  constructor(private gitService: GitService) { }\n\n  ngOnInit() {\n    this.sub = this.gitService.getGitRepositories(\"thakurarun\");\n    this.sub.subscribe((repos) => {\n      this._gitRepositories = repos;\n      this.filterAndSortByLatestRepositories(this.languages.filter(x => x[2])[0]);\n    });\n  }\n  filterAndSortByLatestRepositories(repositoryLanguage: ILanguage) {\n    this.gitRepositories = this.sortRepositories(this._gitRepositories.filter(x => x.language.toLowerCase().indexOf(repositoryLanguage[1]) > -1));\n    this.languages.map(x => { x[2] = false; return true; })\n    repositoryLanguage[2] = true;\n  }\n  sortRepositories(repos: Array<Repository>) {\n    repos.sort((b, a) => {\n      return a.updated_at < b.updated_at ? -1 : a.updated_at == b.updated_at ? 0 : 1;\n    });\n    return repos;\n  }\n}\n"]}